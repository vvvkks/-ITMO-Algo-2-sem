#include <iostream>
#include <vector>
using namespace std;
vector<vector<int>> answer;
vector<vector<int> > tree;
 
void dfs(int v)
{
    answer[v][0] = 0;
    answer[v][1] = 1;
    for (auto u : tree[v])
        dfs(u);
    for (auto u : tree[v])
    {
        answer[v][1] += answer[u][0];
        answer[v][0] += max(answer[u][0], answer[u][1]);
    }
}
 
int main()
{
    int n;
    int root;
    cin >> n;
    tree.resize(n);
    answer.assign(n, vector<int>(9, 0));
 
    for (int i = 0; i < n; ++i) {
        int parent;
        cin >> parent;
 
        if (parent != 0)
            tree[parent - 1].push_back(i); //child
        else
            root = i;
    }
 
    dfs(root);
    cout << max(answer[root][0], answer[root][1]);
}
