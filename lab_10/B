#include <iostream>
#include <fstream>
#include <vector>
#include <cmath>
 
using namespace std;
 
int main()
{
 
    ifstream fin("spantree.in");
    ofstream fout("spantree.out");
 
    int n;
    fin >> n;
 
    const int INF = INT_MAX;
    vector<vector<int>> graf(n, vector<int>(n));
    vector<int> dist(n, INF), x(n), y(n);
    vector<bool> used(n);
    double result = 0;
 
    for (int i = 0; i < n; i++)
    {
        fin >> x[i] >> y[i];
    }
 
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            graf[i][j] = (x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j]);
        }
    }
 
    dist[0] = 0;
    for (int i = 0; i < n; i++)
    {
        int min_weight = -1;
 
        for (int j = 0; j < n; j++)
            if (!used[j] && (min_weight == -1 || dist[j] < dist[min_weight]))
                min_weight = j;
 
        used[min_weight] = true;
        for (int j = 0; j < n; j++)
        {
            if (!used[j] && graf[min_weight][j] < dist[j] && min_weight != j)
                dist[j] = graf[min_weight][j];
        }
    }
 
    for (int i = 0; i < n; i++)
    {
        result += sqrt(dist[i]);
    }
 
    fout.precision(10);
    fout << result;
}
